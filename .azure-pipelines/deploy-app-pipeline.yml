# Azure Pipeline
# Run the pipeline to build and push docker image
# On successful build and push, deploy the image to web app
trigger:
  branches:
    include:
      - main
  paths:
    include:
      # Run the pipeline when changes are made to the app folder and Dockerfile
      - app/*
      - Dockerfile


pool:
  vmImage: 'ubuntu-latest'

variables:
  # Container registry service connection established during pipeline creation
  imageRepository: $(IMAGE_REPO)
  containerRegistry: $(AZURE_ACR_REPO)
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'ACRServiceConnection'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
      
- stage: Deploy
  displayName: Deploy image to Web App
  dependsOn: Build # Run Deploy stage only after Build stage is run
  condition: succeeded() # Run only if Build stage is successful
  jobs:
    - job: Deploy
      displayName: Deploy
      steps:
        - task: AzureRmWebAppDeployment@5
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'AzureServiceConnection'
            appType: 'webAppContainer'
            WebAppName: '$(WEB_APP_NAME)'
            DockerNamespace: '$(containerRegistry)'
            DockerRepository: '$(imageRepository)'
            DockerImageTag: '$(tag)'